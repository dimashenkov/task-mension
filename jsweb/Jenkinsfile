pipeline {

    agent any

    environment {
        APP_NAME = "jsweb"
    }
    
    stages {
    
        stage('Clone repository') {
            steps {
                checkout scm
            }
        }
        
        stage('Build app image') {
            steps{
                sh "docker build -t img-${APP_NAME}-app -f ${APP_NAME}/Dockerfile ."
            }
        }
        
        stage('Build test image') {
            steps{
                sh "docker build -t img-${APP_NAME}-test -f ${APP_NAME}/Dockerfile.test ."
            }
        }
        
        stage('Security tests') {
            steps {
                sh "> report.txt"
                sh "docker-compose -f jsweb/docker-compose-test.yaml up -d --force-recreate"
                sh "docker exec ${APP_NAME}-test /tmp/tests/apptest.sh >> report.txt"
                sh "docker exec ${APP_NAME}-app /tmp/tests/test_priv.sh >> report.txt" 
                sh "docker exec ${APP_NAME}-app /tmp/tests/test_kernel_v.sh >> report.txt"
                sh "docker-compose -f jsweb/docker-compose-test.yaml down -v"
            }
        }
        
        stage('Push image') {
            steps{
                sh "docker tag img-${APP_NAME}-app ${REGISTRY}/${APP_NAME}-app:latest"
                sh "docker tag img-${APP_NAME}-app ${REGISTRY}/${APP_NAME}-app:${TAG}"
                sh "docker push ${REGISTRY}/${APP_NAME}-app:${TAG}"
                sh "docker push ${REGISTRY}/${APP_NAME}-app:latest"
            }
        }
    }
    
    post {
        always {
            echo "Success or not - Delete generated images."
            sh "docker image rm img-${APP_NAME}-app"
            sh "docker image rm img-${APP_NAME}-test"
            archiveArtifacts artifacts: 'report.txt', fingerprint: true
        }
        success {
            echo "Build succeed"
        }
        unstable {
            echo "Build is unstable"
        }
        failure {
            echo "Build failed, send mail notification!"
            emailext (
                subject: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """<p>FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                    <p>Check console output at &QUOT;<a href='${env.BUILD_URL}'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>""",
                recipientProviders: [[$class: 'DevelopersRecipientProvider']]
            )
//             mail to: 'peter_tsonkov@epam.com',
//                 subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
//                 body: "Something is wrong with ${env.BUILD_URL}"
        }
        changed {
            echo "Something was changed"
        }
    }
}
